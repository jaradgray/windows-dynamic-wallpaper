<Window x:Class="DynamicWallpaperNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DynamicWallpaperNamespace"
        mc:Ignorable="d"
        Title="Dynamic Wallpaper"
        SizeToContent="WidthAndHeight"
        Background="#121212"
        Foreground="#DEFFFFFF">
    
    <!-- Define resources in the Window's scope -->
    <Window.Resources>

        <SolidColorBrush x:Key="Static.Foreground.HighEmphasis" Color="#DEFFFFFF" />

        <!--
            Can't just edit the default style. Have to re-define the entire style.
            Copied default button style from C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\DesignTools\SystemThemes\Wpf\aero2.normalcolor.xaml
            Then we can make our edits
        
            Stuff for Default Button Style (edited)
        -->
        
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <SolidColorBrush x:Key="Button.Static.Background" Color="#222222" />
        <SolidColorBrush x:Key="Button.Static.Foreground" Color="#DEFFFFFF" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#333333" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#333333" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#222222" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#61FFFFFF" />

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                            RecognizesAccessKey="True"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" TargetName="border" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}" TargetName="border" />
                                <Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" TargetName="border" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{StaticResource Button.Pressed.Background}" TargetName="border" />
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" TargetName="border" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{StaticResource Button.Disabled.Background}" TargetName="border" />
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" TargetName="border" />
                                <Setter Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" TargetName="contentPresenter" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="8" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" /> <!-- blank fill -->
            <RowDefinition Height="8" />
            <RowDefinition Height="auto" /> <!-- status bar -->
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/> <!-- blank fill -->
            <ColumnDefinition Width="8"/>
        </Grid.ColumnDefinitions>


        <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
            TextAlignment="Center"
            FontSize="32"
            FontWeight="Light"
            Text="Dynamic Wallpaper"/>
        <Image Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
            Source="Resources/AppIcon_256.png"
            Width="256"
            Height="256"
            Margin="0 0 0 16"/>
        <TextBlock Grid.Row="3" Grid.Column="1"
            Margin="0 0 0 8"
            FontSize="18"
            Text="Select Wallpaper"/>
        <TextBlock Grid.Row="4" Grid.Column="1"
            Margin="0 0 0 8"
            FontSize="16"
            Foreground="#99FFFFFF"
            Text ="Set a dynamic wallpaper by selecting a file from its directory:"/>
        <Button x:Name="selectWallpaperButton" Grid.Row="5" Grid.Column="1"
            Style="{StaticResource BaseButtonStyle}"
            HorizontalAlignment="Left"
            Padding="8"
            Margin="0 0 0 8"
            FontSize="16"
            Content="Select Wallpaper" Click="SelectWallpaperButton_Click"/>
        
        <!-- Status Bar -->
        <Grid x:Name="statusBar" Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="4" Background="#007acc">
            <Grid.RowDefinitions>
                <RowDefinition Height="2" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="2" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2"/>
            </Grid.ColumnDefinitions>

            <TextBlock x:Name="statusTextBlock" Grid.Row="1" Grid.Column="1"
                Margin="8 0 0 0"
                FontSize="16"
                Text="Hello"/>
            <TextBlock x:Name="wallpaperNameTextBlock"
                Grid.Row="1"
                Grid.Column="2"
                Margin="16 0 0 0"
                Padding="8 0 8 0"
                FontSize="16"
                Text="wallpaperNameTextBlock"
                Cursor="Hand"
                MouseEnter="WallpaperNameTextBlock_MouseEnter"
                MouseLeave="WallpaperNameTextBlock_MouseLeave"
                MouseLeftButtonDown="WallpaperNameTextBlock_MouseLeftButtonDown"
                MouseLeftButtonUp="WallpaperNameTextBlock_MouseLeftButtonUp"
                Visibility="Collapsed"/>
            <TextBlock x:Name="wallpaperChangeTimeTextBlock"
                Grid.Row="1"
                Grid.Column="3"
                Margin="16 0 0 0"
                FontSize="16"
                Text="wallpaperChangeTimeTextBlock"
                Visibility="Collapsed"/>
            
            <!-- Surround with Border because Panels don't have Padding property -->
            <Border
                x:Name="locationBorder"
                Grid.Row="1"
                Grid.Column="4"
                Margin="16 0 0 0"
                Padding="8 0 8 0"
                HorizontalAlignment="Right"
                Cursor="Hand"
                MouseEnter="LocationBorder_MouseEnter"
                MouseLeave="LocationBorder_MouseLeave"
                MouseLeftButtonDown="LocationBorder_MouseLeftButtonDown"
                MouseLeftButtonUp="LocationBorder_MouseLeftButtonUp">
                <StackPanel
                    Orientation="Horizontal">
                    <Path
                        Stretch="Uniform"
                        HorizontalAlignment="Left"
                        Fill="{StaticResource Static.Foreground.HighEmphasis}"
                        Data="M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 1 0-6 3 3 0 0 1 0 6z"/>
                    <TextBlock
                        x:Name="locationTextBlock"
                        Margin="8 0 0 0"
                        HorizontalAlignment="Center"
                        FontSize="16"
                        Text="Hi there"/>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</Window>
